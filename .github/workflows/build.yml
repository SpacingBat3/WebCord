name: Build distributables
on:
  push:
    branches-ignore:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
    branches-ignore:
      - 'v*'

env:
  WEBCORD_BUILD: DEVEL

permissions: {}

jobs:
  test:
    strategy:
      matrix:
        deps: ['latest', 'locked']
    name: "Test build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Update dependencies
        if: ${{ matrix.deps == 'latest' }}
        run: npm update

      - name: TSC cache
        uses: actions/cache@v3
        with:
          key: tsc-${{ matrix.deps }}
          path: |
            app
            cache/tsc.json
      
      - name: ESLint cache
        uses: actions/cache@v3
        with:
          key: eslint-${{ matrix.deps }}
          path: |
            cache/eslint.json

      - name: Run tests with ${{ matrix.deps }} dependencies
        run: npm test
  make:
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-20.04, windows-latest, macos-latest]
        build: [latest, locked]
        include:
          - runner: ubuntu-20.04
            name: Linux
            arch: x64,arm64,armv7l
          - runner: windows-latest
            name: Windows
            arch: x64,arm64,ia32
          - runner: macos-latest
            name: macOS
            arch: x64,arm64,universal

    name: '${{ matrix.name }} (${{ matrix.build }})'
    runs-on: ${{ matrix.runner }}
    needs: ['test']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Update dependencies
        if: ${{ matrix.build == 'latest' }}
        run: npm update

      - name: TSC cache
        uses: actions/cache@v3
        with:
          key: tsc-${{ matrix.build }}
          path: |
            app
            cache/tsc.json

      - name: Generate distributables (${{ matrix.arch }})
        uses: nick-fields/retry@v2
        with:
          retry_on: error
          max_attempts: 3
          timeout_minutes: 10
          command: npm run make -- -a ${{ matrix.arch }}

      - name: Upload distributables as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}_${{ matrix.build }}
          path: out/devel/make/*

      - name: Upload lockfile as artifact
        if: ${{ matrix.build == 'latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-lockfile_updated
          path: package-lock.json